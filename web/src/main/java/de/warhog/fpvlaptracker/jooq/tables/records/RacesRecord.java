/*
 * This file is generated by jOOQ.
 */
package de.warhog.fpvlaptracker.jooq.tables.records;


import de.warhog.fpvlaptracker.jooq.tables.Races;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RacesRecord extends UpdatableRecordImpl<RacesRecord> implements Record4<Integer, Integer, Integer, String> {

    private static final long serialVersionUID = -1753733982;

    /**
     * Setter for <code>PUBLIC.RACES.ID</code>.
     */
    public RacesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.RACES.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.RACES.STARTTIME</code>.
     */
    public RacesRecord setStarttime(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.RACES.STARTTIME</code>.
     */
    public Integer getStarttime() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.RACES.LAPS</code>.
     */
    public RacesRecord setLaps(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.RACES.LAPS</code>.
     */
    public Integer getLaps() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.RACES.STATE</code>.
     */
    public RacesRecord setState(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.RACES.STATE</code>.
     */
    public String getState() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Races.RACES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Races.RACES.STARTTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Races.RACES.LAPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Races.RACES.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getLaps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getLaps();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RacesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RacesRecord value2(Integer value) {
        setStarttime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RacesRecord value3(Integer value) {
        setLaps(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RacesRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RacesRecord values(Integer value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RacesRecord
     */
    public RacesRecord() {
        super(Races.RACES);
    }

    /**
     * Create a detached, initialised RacesRecord
     */
    public RacesRecord(Integer id, Integer starttime, Integer laps, String state) {
        super(Races.RACES);

        set(0, id);
        set(1, starttime);
        set(2, laps);
        set(3, state);
    }
}
