/*
 * This file is generated by jOOQ.
 */
package de.warhog.fpvlaptracker.jooq.tables.records;


import de.warhog.fpvlaptracker.jooq.tables.PersistentLogins;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersistentLoginsRecord extends UpdatableRecordImpl<PersistentLoginsRecord> implements Record4<String, String, String, Timestamp> {

    private static final long serialVersionUID = 943581988;

    /**
     * Setter for <code>PUBLIC.PERSISTENT_LOGINS.USERNAME</code>.
     */
    public PersistentLoginsRecord setUsername(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.PERSISTENT_LOGINS.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PERSISTENT_LOGINS.SERIES</code>.
     */
    public PersistentLoginsRecord setSeries(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.PERSISTENT_LOGINS.SERIES</code>.
     */
    public String getSeries() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PERSISTENT_LOGINS.TOKEN</code>.
     */
    public PersistentLoginsRecord setToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.PERSISTENT_LOGINS.TOKEN</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PERSISTENT_LOGINS.LAST_USED</code>.
     */
    public PersistentLoginsRecord setLastUsed(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.PERSISTENT_LOGINS.LAST_USED</code>.
     */
    public Timestamp getLastUsed() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PersistentLogins.PERSISTENT_LOGINS.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PersistentLogins.PERSISTENT_LOGINS.SERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PersistentLogins.PERSISTENT_LOGINS.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return PersistentLogins.PERSISTENT_LOGINS.LAST_USED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getLastUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getLastUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersistentLoginsRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersistentLoginsRecord value2(String value) {
        setSeries(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersistentLoginsRecord value3(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersistentLoginsRecord value4(Timestamp value) {
        setLastUsed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersistentLoginsRecord values(String value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersistentLoginsRecord
     */
    public PersistentLoginsRecord() {
        super(PersistentLogins.PERSISTENT_LOGINS);
    }

    /**
     * Create a detached, initialised PersistentLoginsRecord
     */
    public PersistentLoginsRecord(String username, String series, String token, Timestamp lastUsed) {
        super(PersistentLogins.PERSISTENT_LOGINS);

        set(0, username);
        set(1, series);
        set(2, token);
        set(3, lastUsed);
    }
}
