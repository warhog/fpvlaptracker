/*
 * This file is generated by jOOQ.
 */
package de.warhog.fpvlaptracker.jooq.tables.records;


import de.warhog.fpvlaptracker.jooq.tables.Laps;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LapsRecord extends UpdatableRecordImpl<LapsRecord> implements Record5<Integer, Integer, Long, Integer, Integer> {

    private static final long serialVersionUID = 151125687;

    /**
     * Setter for <code>PUBLIC.LAPS.ID</code>.
     */
    public LapsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.LAPS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.LAPS.RACEID</code>.
     */
    public LapsRecord setRaceid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.LAPS.RACEID</code>.
     */
    public Integer getRaceid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.LAPS.CHIPID</code>.
     */
    public LapsRecord setChipid(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.LAPS.CHIPID</code>.
     */
    public Long getChipid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.LAPS.LAP</code>.
     */
    public LapsRecord setLap(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.LAPS.LAP</code>.
     */
    public Integer getLap() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PUBLIC.LAPS.DURATION</code>.
     */
    public LapsRecord setDuration(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.LAPS.DURATION</code>.
     */
    public Integer getDuration() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Long, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Long, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Laps.LAPS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Laps.LAPS.RACEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Laps.LAPS.CHIPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Laps.LAPS.LAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Laps.LAPS.DURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getRaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getChipid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getChipid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord value2(Integer value) {
        setRaceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord value3(Long value) {
        setChipid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord value4(Integer value) {
        setLap(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord value5(Integer value) {
        setDuration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LapsRecord values(Integer value1, Integer value2, Long value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LapsRecord
     */
    public LapsRecord() {
        super(Laps.LAPS);
    }

    /**
     * Create a detached, initialised LapsRecord
     */
    public LapsRecord(Integer id, Integer raceid, Long chipid, Integer lap, Integer duration) {
        super(Laps.LAPS);

        set(0, id);
        set(1, raceid);
        set(2, chipid);
        set(3, lap);
        set(4, duration);
    }
}
